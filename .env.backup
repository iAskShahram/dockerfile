PORT=3030
REMIX_APP_PORT=3030

NODE_ENV=production
RUNTIME_PLATFORM=docker-compose

V3_ENABLED=true
# TRIGGER_TELEMETRY_DISABLED=1
INTERNAL_OTEL_TRACE_DISABLED=1
INTERNAL_OTEL_TRACE_LOGGING_ENABLED=0

POSTGRES_USER=postgres
POSTGRES_PASSWORD=FRVIXfwUFm219rNBXXJwQ7olblQcN8L7SUJLTnNwp4qcAE19zQZIKd8D4ECkPoOH
POSTGRES_DB=postgres
DATABASE_HOST=78.46.215.249:5434
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}

# This sets the URL used for direct connections to the database and should only be needed in limited circumstances
# See: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#fields:~:text=the%20shadow%20database.-,directUrl,-No
DIRECT_URL=${DATABASE_URL}

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_TLS_DISABLED=true

# If this is set, emails that are not specified won't be able to log in
WHITELISTED_EMAILS="shahram.ask.546@gmail\.com"

# Accounts with these emails will become admins when signing up and get access to the admin panel
ADMIN_EMAILS="shahram.ask.546@gmail\.com"

# If this is set, your users will be able to log in via GitHub
AUTH_GITHUB_CLIENT_ID=Ov23liDN6yTk8zx9QLDf
AUTH_GITHUB_CLIENT_SECRET=dafe9bd5edac31afa6265782f8e8c231c1a1077c

# E-mail settings
#
# - Ensure the FROM_EMAIL matches what you setup with Resend.com
# - If these are not set, emails will be printed to the console
#
FROM_EMAIL=shahram.ask.546@gmail\.com
REPLY_TO_EMAIL=shahram.ask.546@gmail\.com
RESEND_API_KEY=re_65wm1WxB_6wwfC9munoNewYoPjyFSz2W9

# Alert E-mail settings
# - Ensure the ALERT_FROM_EMAIL matches what you setup with Resend.com
# - If these are not set, email alerts will not work.
#
ALERT_FROM_EMAIL=shahram.ask.546@gmail\.com
ALERT_RESEND_API_KEY=re_65wm1WxB_6wwfC9munoNewYoPjyFSz2W9

# Concurrency limits
#
# - If these are too high, you may run out of resources on your worker. A simple fix is to either re-deploy
#   with lower limits, or set appropriate limits in your trigger.config.ts or directly on your tasks.
#
DEFAULT_ORG_EXECUTION_CONCURRENCY_LIMIT=300
DEFAULT_ENV_EXECUTION_CONCURRENCY_LIMIT=100

# Secrets
#
# - You MUST change these in production!
#
# generate these with `openssl rand -hex 16`
MAGIC_LINK_SECRET=secret # used to encrypt magic link tokens
SESSION_SECRET=secret # used to encrypt session cookies
ENCRYPTION_KEY=ae13021afef0819c3a307ad487071c06 # used to encrypt permanent data
#
# generate these with `openssl rand -hex 32`
PROVIDER_SECRET=provider-secret
COORDINATOR_SECRET=coordinator-secret

# Worker settings
#
HTTP_SERVER_PORT=9020
COORDINATOR_HOST=127.0.0.1
COORDINATOR_PORT=${HTTP_SERVER_PORT}
REGISTRY_HOST=${DEPLOY_REGISTRY_HOST}
REGISTRY_NAMESPACE=${DEPLOY_REGISTRY_NAMESPACE}
# FORCE_CHECKPOINT_SIMULATION=0 # only uncomment if you are willing to try EXPERIMENTAL docker features - expect bugs

# Docker
#
# RESTART_POLICY=unless-stopped
# WEBAPP_PUBLISH_IP=0.0.0.0
# TRIGGER_IMAGE_TAG=v3
# POSTGRES_IMAGE_TAG=16
# REDIS_IMAGE_TAG=7
# ELECTRIC_IMAGE_TAG=latest

# Registry settings
#
# - Images will be pushed to: host/namespace/project:version
#
# DEPLOY_REGISTRY_HOST=docker.io
# DEPLOY_REGISTRY_NAMESPACE=trigger # you should change this, for example to your Docker Hub username

# Domain settings
#
# - Should be uncommented unless you're just testing locally
# - Required for the split webapp / worker setup
#
TRIGGER_PROTOCOL=https
TRIGGER_DOMAIN=trigger-v2.mkc.engineering